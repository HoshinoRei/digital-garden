[
{
		"title": "Docker Swarm 删除节点",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/1/",
		"content": "在 Node 上\ndocker swarm leave\n\n在 Manager 上\ndocker node rm &lt;node_name&gt;\n\n参考\n\ndocker swarm 删除节点",
		"tags": [ "note","Docker","DockerSwarm"]
},

{
		"title": "Docker 通过代理拉取镜像",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/2/",
		"content": "编辑 /etc/docker/daemon.json\nsudo vim /etc/docker/daemon.json\n\n写入\n{\n&quot;proxies&quot;: {\n&quot;default&quot;: {\n&quot;httpProxy&quot;: &quot;http://:&quot;,\n&quot;httpsProxy&quot;: &quot;http://&quot;,\n&quot;noProxy&quot;: &quot;&quot;\n}\n}\n}\n\n示例\n{\n&quot;proxies&quot;: {\n&quot;default&quot;: {\n&quot;httpProxy&quot;: &quot;http://proxy.example.com:3128&quot;,\n&quot;httpsProxy&quot;: &quot;https://proxy.example.com:3129&quot;,\n&quot;noProxy&quot;: &quot;*.test.example.com,.example.org,127.0.0.0/8&quot;\n}\n}\n}\n\n参考\n\nConfigure the Docker client",
		"tags": [ "note","Docker"]
},

{
		"title": "Excel 创建下拉列表",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/7/",
		"content": "创建下拉列表",
		"tags": [ "note","Excel"]
},

{
		"title": "Home Assistant 如何将概览仪表盘恢复自动生成的状态",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/25/",
		"content": "在仪表盘编辑的菜单里，打开原始配置编辑器，删除里面的配置，用下面的配置替换即可。\nstrategy:\n  type: original-states\n\n来源\n\n请教：如何恢复Home Assistant 概览的默认界面",
		"tags": [ "note","HomeAssistant"]
},

{
		"title": "AI Commits 自用提示语",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/24/",
		"content": "<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/23/\">AI Commits</a>\n英文版\nWrite a commit message that accurately summarizes the changes made in the given `git diff` output, following the best practices and conventional commit convention as described below. Your response should look like this (no codeblock), the response must be the {locale} language:\n\n&lt;type&gt;[optional scope]: &lt;subject&gt;\n\n[optional body (bullet points)]\n\n[optional footer(s)]\n\nExample:\nfeat(components): add `AreaSelector` component\n\nThis commit added a component named `AreaSelector` for choosing area.\n\nThis component include these feature:\n- Fetch areas form the API.\n- Supports selecting city by province, selecting district by city, select street by district, and bidirectional binding value through `v-model`.\n- Configurable properties such as `clearable` and `placeholder`.\n\nThis commit aims to add a new component designed to help users select regions more easily and accurately. With this component, users can browse and choose different regions more intuitively, enhancing user experience and operational efficiency.\n\nHere are some best practices for writing commit messages:\n- Write clear, concise, and descriptive messages that explain the changes made in the commit\n- Use the present tense and active voice in the subject, for example, &quot;fix bug&quot; instead of &quot;fixed bug&quot;\n- Use the imperative mood, which gives the subject a sense of command, e.g. &quot;add feature&quot; instead of &quot;added feature&quot;\n- Limit the subject line to 72 characters or less\n- Don't capitalize the first letter in subject\n- Do not end the subject line with a period\n- Any numbers or file names should be enclosed in backticks, e.g. &quot;`0.1`&quot; instead of &quot;0.1&quot;, &quot;`README.md`&quot; instead of &quot;README.md&quot;\n- Use a blank line between the subject and the body of the message\n- Avoid using general terms like &quot;update&quot; or &quot;change&quot; in the subject, be specific about what was updated or changed\n- Explain, What was done at a glance in the subject line, and provide additional context in the body of the message\n- Why the change was necessary in the body of the message\n- If the commit type is &quot;feat&quot; and the added content is a class, explain what members and methods the class contains, what the parameters of this methods are and what their types area, what the return value is and what type, and why this method is defind\n- If the commit type is &quot;feat&quot; and the added content is a function, explain what the parameters of this function are and what their types are, what the return value is and what type, and why this function is defined\n- If the commit type is &quot;feat&quot; and the added content is a Vue component, explain what the template of thie Vue component contains, what props it receives, and what the interaction logic is\n- If the change contains breaking changes, use this format in the footer to explain the content of the breaking change: `BREAKING CHANGE: &lt;description&gt;`\n\nHere are the commit types you can choose from:\n- feat: Introduces a new feature to the codebase\n- fix: Fix patches a bug in the codebase\n- build: Changes that affect the build system or external dependencies (Usually associated with changes to build scripts, e.g. Gradle, NPM, Cargo). Its scope shoud be the lowercase name of these build systems, such as npm, gradle or cargo.\n- chore: Miscellaneous commits, copyrights or other repo configs, usually used for files in non-src directories. (example scopes: eslint, prettier)\n- ci: Changes to CI configuration files and scripts (example scopes: Travis, Circle, GitHub Actions)\n- docs: Non-code changes, such as fixing typos or adding new documentation (example scopes: readme)\n- style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\n- refactor: A code change that neither fixes a bug nor adds a feature\n- perf: A code change that improves performance\n- test: Adding missing tests or correcting existing tests\n\nHere is the output of the `git diff`:\n--\n{diff}\n\n中文版\n按照下面的 `git diff` 输出的内容中所作的更改根据下面所述的最佳实践和常规提交约定编写一条提交信息，准确总结。你的回复应该如下所示并且无代码块，回复必须是 {locale} 语言：\n\n&lt;类型&gt;[可选的范围]: &lt;主题&gt;\n\n[可选的正文 (要点)]\n\n[可选的尾注]\n\n例子:\nfeat(components): 增加 `AreaSelector` 组件\n\n这个提交增加了一个名为 `AreaSelector` 的组件，用于选择地区。\n\n该组件包含一下功能：\n- 从 API 获取地区信息\n- 支持通过省选择市，通过市选择区，通过区选择街道，并通过 `v-model` 双向绑定值\n- 可配置的参数，例如 `clearable` 和 `placeholder`\n\n这个提交旨在添加一个新组件，帮助用户更轻松和准确地选择地区。通过这个组件，用户可以更加直观地浏览和选择不同的地区，从而提升用户体验和操作效率。\n\n以下是编写提交消息的一些最佳实践：\n- 编写清晰、简洁且描述性强的提交消息，解释提交中所作的更改\n- 在主题中使用现在时而不是过去时，例如“增加功能”而不是“增加了功能”\n- 主题所在的行字符数量应小于或等于 72\n- 主题的结尾不要有句号\n- 任何数字或文件名都应括在反引号中，例如使用 `0.1` 替代 &quot;0.1&quot;，使用 `README.md` 替代 &quot;readme.md&quot;\n- 在主题所在的行和正文之间空出一行\n- 避免在主题中使用“更新”或“变更”等笼统术语，应具体说明更新或变更了哪些内容\n- 在主题中用一句话概括做了什么，再在正文中详细说明做了什么\n- 在正文中说明变更的必要性\n- 在正文中说明为什么需要进行变更\n- 如果提交的类型是 &quot;feat&quot;，且增加的内容是一个类，说明这个类包含哪些成员，哪些方法，这些方法的参数是什么，返回值是什么，为什么要定义这个方法\n- 如果提交的类型是 &quot;feat&quot;，且增加的内容是一个函数，说明这个函数的参数是什么及是什么类型，返回值是什么及是什么类型，为什么要定义这个函数\n- 如果提交的类型是 &quot;feat&quot;，且增加的内容是一个 Vue 组件，说明这个 Vue 组件的 template 包含哪些内容，接收哪些 props，交互逻辑是什么\n- 如果更改包含破坏性变更，则在页脚使用该格式解释破坏性变更的内容 `BREAKING CHANGE: &lt;描述&gt;`\n\n以下是你可以选择的提交类型：\n- feat：为代码库引入新功能\n- fix：修复代码库中的错误\n- build：影响构建系统或外部依赖项的更改（通常与构建脚本的更改相关，例如 Gradle、NPM、Cargo）。其范围应为这些构建系统的小写名称，例如 npm、gradle 或 cargo。\n- chore：杂项提交、版权或其他 repo 配置，通常用于非 src 目录中的文件。（示例范围：eslint、prettier）\n- ci：CI 配置文件和脚本的更改（示例范围：Travis、Circle、GitHub Actions）\n- docs：非代码更改，例如修复拼写错误或添加新文档（示例范围：readme）\n- style：不影响代码含义的更改（空格、格式、缺少分号等）\n- refactor：既不修复错误也不添加功能的代码更改\n- perf：提高性能的代码更改\n- test：添加缺失的测试或更正现有测试\n\n以下是 `git diff` 输出的内容：\n--\n{diff}\n\n参考\n\nPrompts\nConventional Commits 1.0.0",
		"tags": [ "note","Jetbrains","AICommits"]
},

{
		"title": "AI Commits",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/23/",
		"content": "介绍\nJetbrains IDE 的一个插件，可以根据 git diff 生成 commit message。\nAI Commits 插件地址",
		"tags": [ "note","Jetbrains","AICommits"]
},

{
		"title": "国内无法访问 Docker 一键安装脚本的解决方法",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/21/",
		"content": "Docker 的一键安装脚本的域名 get.docker.com 无法访问了怎么办？\nroot@debian:~# curl -fsSL https://get.docker.com | bash\ncurl: (35) Recv failure: Connection reset by peer\n\n其实，这个脚本在 Github 上有个仓库，只要访问仓库里脚本的下载地址就好了。\ncurl -fsSL https://raw.githubusercontent.com/docker/docker-install/master/install.sh | bash\n\n如果 Github 无法访问，还可以用 ghproxy。\ncurl -fsSL https://mirror.ghproxy.com/raw.githubusercontent.com/docker/docker-install/master/install.sh | bash",
		"tags": [ "note","Linux","Docker"]
},

{
		"title": "ImmortalWrt 更改默认 shell 为 bash",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/19/",
		"content": "教程\nImmortalWrt 的默认 shell 是 ash，现在要更改为 bash。\n执行以下命令：\nsed -e 's,root:x:0:0:root:/root:/bin/ash,root:x:0:0:root:/root:/bin/bash,g' -i /etc/passwd\n\n参考\n1.更换openwrt shell解析器为bash,解决history不保存问题",
		"tags": [ "note","Linux","Openwrt","ImmortalWrt"]
},

{
		"title": "ImmortalWrt 使用校园网联合镜像",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/18/",
		"content": "教程\n首先替换下载地址。由于 ImmortalWrt 的默认 shell 是 ash，粘贴命令可能不完整，可以通过先执行 bash 命令切换到 bash。如果要修改默认 shell 为 bash，请看《<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/19/\">ImmortalWrt 更改默认 shell 为 bash</a>》。\nsed -e 's,downloads.immortalwrt.org,mirrors.cernet.edu.cn/immortalwrt,g' -e 's,mirrors.vsean.net/openwrt,mirrors.cernet.edu.cn/immortalwrt,g' -i.bak /etc/opkg/distfeeds.conf\n\n更新源。\nopkg update\n\n参考\n1.ImmortalWrt 软件仓库镜像使用帮助",
		"tags": [ "note","Linux","Openwrt","ImmortalWrt"]
},

{
		"title": "蓝牙 5.0 设备无法扫描低功耗设备的解决方法",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/17/",
		"content": "教程\n通过 hcitool lescan 命令时，返回\nSet scan parameters failed: Input/output error\n\n原来对于蓝牙 5.0 的设备，这个命令已废弃。我们应该使用下面的命令：[1]\nbluetoolctl scan le\n\n参考\n\nhcitool lescan shows I/O error ↩︎",
		"tags": [ "note","Linux"]
},

{
		"title": "Windows 安装 nvm",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/22/",
		"content": "通过 Scoop 安装。\nscoop install main/nvm\n\n设置 Node.js 安装包的镜像，这里实测阿里云、华为云的镜像是无法使用的。都提示缺少文件，中科大的是可以正常使用的。\nnvm node_mirror https://mirrors.ustc.edu.cn/node",
		"tags": [ "note","Windows","Scoop","NodeJS","nvm"]
},

{
		"title": "Digital Garden",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/4/",
		"content": "Obsidian 插件链接\nGithub\n文档",
		"tags": [ "note","Obsidian"]
},

{
		"title": "Obsidian",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/3/",
		"content": "Obsidian",
		"tags": [ "note","Obsidian"]
},

{
		"title": "如何给 Obsidian 的 Digital Garden 插件选择一个好看的主题",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/5/",
		"content": "教程\n<a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/3/\">Obsidian</a> 的 <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/4/\">Digital Garden</a> 插件里有琳琅满目的主题，但是又没有预览图。如何在众多主题中找到一个自己喜欢的呢？\n其实里面的很多主题都是参考 <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/3/\">Obsidian</a> 本身的主题而制作的，咱们只需要在 <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/3/\">Obsidian</a> 的主题市场里挑一个自己喜欢的，然后再到 <a class=\"internal-link\" target=\"\" data-note-icon=\"\" href=\"/note/4/\">Digital Garden</a> 插件的列表里找到同名的主题就可以了。但是这个方法只适合两边都有的情况，如果有一边没有就只能自己应用主题看看效果了。\n参考\n\nHow do I preview the theme?",
		"tags": [ "note","Obsidian"]
},

{
		"title": "背景虚化",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/11/",
		"content": "视频教程\n视频教程\n文字教程\n\n用 PS 打开图片，对图层连按两次 Ctrl + J，复制出两个同样的图层，然后把原图的眼睛关闭，作为备用\n选择最上面的图层\n按 W 选择 快速选择工具，单机选项栏的 选择主体 按钮，就能基本选中人物图像。\n选区调整好后，点击右下角的 添加图层蒙版 图标。\n关闭最上面的人物图层的眼睛，选择它下面的图层。按住 Ctrl 单击蒙版，就重新选中了人物的选区。\n点击菜单中的 选择 &gt; 修改 &gt; 扩展，扩展量 为 5 个像素，确定。\n按 SHIFT + BACKSPACE 弹出填充对话框，内容 为 内容识别，确定。\nCTRL + D 取消选区。\n打开最上面的图层的眼睛。\n右击最上面的图层的下面那个图层，选择 转换为智能对象。\n点击菜单中的 滤镜 &gt; 模糊 &gt; 高斯模糊，半径 根据你想要的模糊度来调整，确定。\n因为是智能滤镜，如果模糊度没设置好，还可以在图层附近找到滤镜调整。",
		"tags": [ "note"]
},

{
		"title": "Steam API",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/8/",
		"content": "Steam Web API Documentation",
		"tags": [ "note"]
},

{
		"title": "Scoop 便携应用仓库",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/13/",
		"content": "仓库地址\nScoop-Portapps\n添加方式\nscoop bucket add Portapps https://github.com/Velgus/Scoop-Portapps",
		"tags": [ "note","Windows","Scoop"]
},

{
		"title": "Windows 关闭现代待机的联网",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/16/",
		"content": "教程\n\n在注册表编辑器中将HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Power\\PowerSettings\\f15576e8-98b7-4186-b944-eafa664402d9\\Attributes 的值从 1 改为 2\n在 控制面板 &gt; 电源选项 &gt; 更改计划设置 &gt; 更改高级电源设置 &gt; 待机状态下的网络连接性 中，把 使用电池 和 接通电源 都禁用\n\n参考\n\n修改 Windows S0 待机状态下的设置",
		"tags": [ "note","Windows"]
},

{
		"title": "Windows 启动文件夹位置",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/12/",
		"content": "用户\n%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n\n系统\nC:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
		"tags": [ "note","Windows"]
},

{
		"title": "通过 Scoop 安装 QQNT 并添加 LiteLoaderQQNT",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/14/",
		"content": "添加仓库\n\nscoop bucket add scoopet https://github.com/ivaquero/scoopet\n\n安装 qq-nt\n\nscoop install scoopet/qq-nt\n\n下载并执行 LiteLoaderQQNT_Install",
		"tags": [ "note","Windows","Scoop"]
},

{
		"title": "查看 OpenAI 账号的 access token",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/15/",
		"content": "打开 这个地址 即可",
		"tags": [ "note"]
},

{
		"title": "Nightcore → Normal",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/9/",
		"content": "Nightcore → Normal (Lyrics)\nThink I drank too much again 我想自己又喝多了\nLooks like fun but it's pretend 虽然看起来很开心，不过这都是装出来的\nWhy do I try to fit in 为什么我要试着去适应这些\nWhen I just wanna go home 我明明就只想回家睡个觉\nAnd I know this isn't like me 而我很清楚这不像我\nI just want people to like me 我只是想让别人也喜欢我\nGot my glass up in the air 将酒杯高高的举向空中\nAnd I act like I don't care 表现得像自己根本不在乎一样\nAnd I take some, but I shouldn't 我喝了一点酒，但我根本不该这样\nAnd I say things that I wouldn't 我说了一些话，但我根本不曾说过那些词\nAnd I'm just part of the crowd 我完完全全成了人群中的一份子\nBut I feel better now so 但我现在不再那么难受，所以……\nKeep on playing that song that I don't like 继续听着那首我不怎么喜欢的歌\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nKeep on kissing that guy that's not my type 继续吻着那个我不怎么喜欢的人\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nI should go, it's getting late 我早该走了，时间已经越来越晚\nBut I'ma keep on dancing 'till I feel okay 但我还是继续跳着舞，继续寻求着一点安慰\nSo keep on playing that song that I don't like 所以继续唱着那首我不怎么喜欢的歌\nI just wanna feel normal for the night 我只是想像普通人一样享受这个夜晚\nTaking pictures in the dark 在黑暗中为自己拍张自拍照\nSmoke it up 'till I can't talk 抽着一根根烟一直到自己喘不过气为止\nFooled myself, almost forgot 就这样麻醉自己，差点就忘记\nThat I just wanna go home 其实我只想回家好好睡个觉\nAnd I know this isn't like me 而我很清楚这不像我\nI just want people to like me 我只是想让别人也喜欢我\nGot my glass up in the air 将酒杯高高的举向空中\nAnd I act like I don't care 表现得像自己根本不在乎一样\nAnd I take some, but I shouldn't 我喝了一点酒，但我根本不该这样\nAnd I say things that I wouldn't 我说了一些话，但我根本不曾说过那些词\nAnd I'm just part of the crowd 我完完全全成了人群中的一份子\nBut I feel better now so 但我现在不再那么难受，所以……\nKeep on playing that song that I don't like 继续听着那首我不怎么喜欢的歌\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nKeep on kissing that guy that's not my type 继续吻着那个我不怎么喜欢的人\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nI should go, it's getting late 我早该走了，时间已经越来越晚\nBut I'ma keep on dancing 'till I feel okay 但我还是继续跳着舞，继续寻求着一点安慰\nSo keep on playing that song that I don't like 所以继续唱着那首我不怎么喜欢的歌\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nI just wanna feel normal 我只是想像个正常人\nKeep on playing that song that I don't like 继续听着那首我不怎么喜欢的歌\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nKeep on kissing that guy that's not my type 继续吻着那个我不怎么喜欢的人\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚\nI should go, it's getting late 我早该走了，时间已经越来越晚\nBut I'ma keep on dancing 'till I feel okay 但我还是继续跳着舞，继续寻求着一点安慰\nSo keep on playing that song that I don't like 所以继续唱着那首我不怎么喜欢的歌\nI just wanna feel normal for the night 我只是想像个普通人一样享受这个夜晚",
		"tags": [ "note"]
},

{
		"title": "Minecraft 基岩版存档位置",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/10/",
		"content": "%USERPROFILE%\\AppData\\Local\\Packages\\Microsoft.MinecraftUWP_8wekyb3d8bbwe\\LocalState\\games\\com.mojang\\minecraftWorlds",
		"tags": [ "note","Windows","Minecraft"]
},

{
		"title": "电信 TEWA-769E 光猫获取管理员密码",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/note/6/",
		"content": "教程\n\n准备一个 U 盘，格式化成 FAT32 格式，插入光猫的 USB 口\n打开 http://192.168.1.1:8080，通过光猫背面的账号密码登录，默认用户名应该是 useradmin\n打开 设备管理，在浏览器控制台的 Elements 中搜索 set3_sessionKey 并记下\n将 sessionKey 添加到 http://192.168.1.1:8080/usbbackup.cmd?action=backupeble&amp;set3_sessionKey= 尾部并打开\n禁用 快速恢复，点击 备份配置\n拔下 U 盘并插入电脑，此时 U 盘根目录应该多了个 e8_Config_Backup 文件夹\n打开 http://freevon.net/jm/，配置文件选择 e8_Config_Backup 文件夹中的 ctce8_TEWA-769E.cfg 并转换\n搜索 TeleComAccount，如果附近有被 &lt;Password&gt; 包裹的字符串则该字符串就是光猫管理员密码\n\n提示\n光猫管理员账号一般是 telecomadmin。虽说光猫型号可能会不同，但是理论上是可以通过这个教程获取管理员密码的。\n参考\n\n电信天翼网关TEWA-1000E/G等系列光猫破解超级密码",
		"tags": [ "note"]
},

{
		"title": "首页",
		"date":"Fri Oct 18 2024 00:37:27 GMT+0000 (Coordinated Universal Time)",
		"url":"/",
		"content": "这只是一个用来占位的首页。\n\nRSS\nSitemap",
		"tags": [ "note","gardenEntry"]
}
]